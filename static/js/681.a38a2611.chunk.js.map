{"version":3,"file":"static/js/681.a38a2611.chunk.js","mappings":"8SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,8FACnBF,EAAAA,EAAAA,IAAA,qCAAwCC,IADrB,mFAAH,qDAIlBE,EAAiB,mCAAG,WAAMC,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,oBAAuCH,IADrB,mFAAH,sDAIjBI,EAAiB,mCAAG,WAAMD,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,4BAA+CH,IAD7B,mFAAH,sDAIjBK,EAAiB,mCAAG,WAAMF,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,gBACFI,EADE,4BAC0BH,EAD1B,2BADkB,mFAAH,sDAMjBM,EAAoB,mCAAG,WAAMC,GAAN,iFACrBR,EAAAA,EAAAA,IAAA,+BACaC,EADb,iCAC6CO,EAD7C,gCADqB,mFAAH,qD,6ECUjC,UA7BgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAkBG,GACfQ,MAAK,SAAAC,GAAQ,OAAIL,EAAgBK,EAASC,KAAKC,QAAlC,IACbC,OAAM,SAAAP,GAAK,OAAIC,EAASD,EAAMQ,QAAnB,GACf,GAAE,CAACb,KAGF,8BACGG,EAAaW,QACZ,wBACGX,EAAaY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADO,MAQnBX,IAAS,uBAAIA,MAAe,2CAIpC,C","sources":["api/tmdb.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '338552ddf479699ffa2d32656eaccc70';\n\nexport const fetchTrendingToday = async () => {\n  return await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  return await axios.get(`movie/${movie_id}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCredits = async movie_id => {\n  return await axios.get(`movie/${movie_id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviews = async movie_id => {\n  return await axios.get(\n    `movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\n\nexport const fetchMoviesWithQuery = async query => {\n  return await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from 'api/tmdb';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId)\n      .then(response => setMovieReviews(response.data.results))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <>\n      {movieReviews.length ? (\n        <ul>\n          {movieReviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h4>Author: {author}</h4>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        (error && <p>{error}</p>) || <p>No reviews yet</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","fetchTrendingToday","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews","fetchMoviesWithQuery","query","movieId","useParams","useState","movieReviews","setMovieReviews","error","setError","useEffect","then","response","data","results","catch","message","length","map","id","author","content"],"sourceRoot":""}