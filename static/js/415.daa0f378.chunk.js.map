{"version":3,"file":"static/js/415.daa0f378.chunk.js","mappings":"8SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,8FACnBF,EAAAA,EAAAA,IAAA,qCAAwCC,IADrB,mFAAH,qDAIlBE,EAAiB,mCAAG,WAAMC,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,oBAAuCH,IADrB,mFAAH,sDAIjBI,EAAiB,mCAAG,WAAMD,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,4BAA+CH,IAD7B,mFAAH,sDAIjBK,EAAiB,mCAAG,WAAMF,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,gBACFI,EADE,4BAC0BH,EAD1B,2BADkB,mFAAH,sDAMjBM,EAAoB,mCAAG,WAAMC,GAAN,iFACrBR,EAAAA,EAAAA,IAAA,+BACaC,EADb,iCAC6CO,EAD7C,gCADqB,mFAAH,qD,qFCYjC,UA9Ba,WACX,OAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,MAAqBa,MAAK,SAAAC,GAAQ,OAChCL,EAAiBK,EAASC,KAAKC,QADC,GAGnC,GAAE,KAGD,+BACE,6BACE,4CACA,wBACGR,EAAcS,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC/B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMb,GAA1C,SACGS,GAASC,KAFLF,EAMZ,UAKV,C","sources":["api/tmdb.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '338552ddf479699ffa2d32656eaccc70';\n\nexport const fetchTrendingToday = async () => {\n  return await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  return await axios.get(`movie/${movie_id}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCredits = async movie_id => {\n  return await axios.get(`movie/${movie_id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviews = async movie_id => {\n  return await axios.get(\n    `movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\n\nexport const fetchMoviesWithQuery = async query => {\n  return await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchTrendingToday } from 'api/tmdb';\nimport propTypes from 'prop-types';\n\nconst Home = () => {\n  const [trendingToday, setTrendingToday] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrendingToday().then(response =>\n      setTrendingToday(response.data.results)\n    );\n  }, []);\n\n  return (\n    <>\n      <main>\n        <h1>Trending today</h1>\n        <ul>\n          {trendingToday.map(({ id, title, name }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title || name}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  trendingToday: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      title: propTypes.string,\n      name: propTypes.string,\n    })\n  ),\n};\n"],"names":["axios","API_KEY","fetchTrendingToday","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews","fetchMoviesWithQuery","query","useState","trendingToday","setTrendingToday","location","useLocation","useEffect","then","response","data","results","map","id","title","name","to","state","from"],"sourceRoot":""}