{"version":3,"file":"static/js/616.6e4ab75d.chunk.js","mappings":"8SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,8FACnBF,EAAAA,EAAAA,IAAA,qCAAwCC,IADrB,mFAAH,qDAIlBE,EAAiB,mCAAG,WAAMC,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,oBAAuCH,IADrB,mFAAH,sDAIjBI,EAAiB,mCAAG,WAAMD,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,4BAA+CH,IAD7B,mFAAH,sDAIjBK,EAAiB,mCAAG,WAAMF,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,gBACFI,EADE,4BAC0BH,EAD1B,2BADkB,mFAAH,sDAMjBM,EAAoB,mCAAG,WAAMC,GAAN,iFACrBR,EAAAA,EAAAA,IAAA,+BACaC,EADb,iCAC6CO,EAD7C,gCADqB,mFAAH,qD,2HCtBjC,EAA8B,kCAA9B,EAA4E,gC,SCqF5E,EA1EqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAEzCC,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,IAAkBM,GACfa,MAAK,SAAAC,GAAQ,OAAIV,EAAgBU,EAASC,KAA7B,IACbC,OAAM,SAAAX,GAAK,OAAIC,EAASD,EAAMY,QAAnB,GACf,GAAE,CAACjB,IAEJ,IAAQkB,EACNf,EADMe,MAAOC,EACbhB,EADagB,aAAcC,EAC3BjB,EAD2BiB,SAAUC,EACrClB,EADqCkB,OAAQC,EAC7CnB,EAD6CmB,YAAaC,EAC1DpB,EAD0DoB,aAG5D,OACE,8BACGpB,IAAiBE,GAChB,iCACE,SAAC,KAAD,CAASmB,GAAIf,EAAb,UACE,kDAEF,kBAAMgB,UAAWC,EAAjB,WACE,gBACEC,IACEL,EAAW,0CAC4BA,GAD5B,+EAIbM,IAAG,UAAKV,EAAL,iBACHW,MAAO,OAET,iBAAKJ,UAAWC,EAAhB,WACE,0BACGR,EADH,eACeK,EAAaO,MAAM,EAAG,GADrC,SAGA,wCAAgBC,KAAKC,MAAqB,GAAfb,GAA3B,QACA,uCACA,uBAAIC,KACJ,oCACA,uBAAIC,GAAUA,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,KAAH,iBAAkBA,EAAlB,aAG7B,mBACA,8BACE,mDAEA,2BACE,yBACE,SAAC,KAAD,CAAMV,GAAE,kBAAaxB,EAAb,SAA6BU,MAAOH,EAASG,MAArD,qBAIF,yBACE,SAAC,KAAD,CAAMc,GAAE,kBAAaxB,EAAb,YAAgCU,MAAOH,EAASG,MAAxD,2BAKJ,mBACA,SAAC,EAAAyB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,aAKN,uBAAIhC,KAIX,C","sources":["api/tmdb.js","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '338552ddf479699ffa2d32656eaccc70';\n\nexport const fetchTrendingToday = async () => {\n  return await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  return await axios.get(`movie/${movie_id}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCredits = async movie_id => {\n  return await axios.get(`movie/${movie_id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieReviews = async movie_id => {\n  return await axios.get(\n    `movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\n\nexport const fetchMoviesWithQuery = async query => {\n  return await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"mainSection\":\"MovieDetails_mainSection__ZOQdx\",\"movieInfo\":\"MovieDetails_movieInfo__RFaEp\"};","import {\n  useParams,\n  Link,\n  NavLink,\n  useLocation,\n  Outlet,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchMovieDetails } from 'api/tmdb';\nimport Loader from 'components/Loader';\nimport style from '../pages/MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState('');\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const backHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(response => setMovieDetails(response.data))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  const { title, vote_average, overview, genres, poster_path, release_date } =\n    movieDetails;\n\n  return (\n    <>\n      {movieDetails && !error ? (\n        <>\n          <NavLink to={backHref}>\n            <button>‚Üê Go back</button>\n          </NavLink>\n          <main className={style.mainSection}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n              }\n              alt={`${title} movie poster`}\n              width={200}\n            />\n            <div className={style.movieInfo}>\n              <h2>\n                {title} {`(${release_date.slice(0, 4)})`}\n              </h2>\n              <p>User Score: {Math.round(vote_average * 10)}%</p>\n              <h3>Overview:</h3>\n              <p>{overview}</p>\n              <h4>Genres</h4>\n              <p>{genres && genres.map(({ name }) => ` ${name}`)}</p>\n            </div>\n          </main>\n          <hr />\n          <aside>\n            <p>Additional information</p>\n\n            <ul>\n              <li>\n                <Link to={`/movies/${movieId}/cast`} state={location.state}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to={`/movies/${movieId}/reviews`} state={location.state}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n            <hr />\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </aside>\n        </>\n      ) : (\n        <p>{error}</p>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchTrendingToday","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews","fetchMoviesWithQuery","query","movieId","useParams","useState","movieDetails","setMovieDetails","error","setError","location","useLocation","backHref","state","from","useEffect","then","response","data","catch","message","title","vote_average","overview","genres","poster_path","release_date","to","className","style","src","alt","width","slice","Math","round","map","name","Suspense","fallback","Loader"],"sourceRoot":""}